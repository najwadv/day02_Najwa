CREATE TABLE bank (
	bank_code CHARACTER VARYING (4) PRIMARY KEY,
	bank_name CHARACTER VARYING (55)
);

CREATE TABLE users (
	user_id INTEGER PRIMARY KEY,
	user_name CHARACTER VARYING (30),
	user_email CHARACTER VARYING (80),
	user_password CHARACTER VARYING (125),
	user_handphone CHARACTER VARYING (24),
	created_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	UNIQUE (user_email,user_handphone)
);

CREATE TABLE carts (
	cart_id SMALLINT PRIMARY KEY,
	created_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	user_id INT UNIQUE,
	FOREIGN KEY (user_id) REFERENCES users(user_id)
	ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE cart_items (
	cart_item_id SMALLINT PRIMARY KEY,
	product_id INT UNIQUE,
	quantity SMALLINT,
	created_on TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	cart_id INT NOT NULL,
	FOREIGN KEY (cart_id) REFERENCES carts(cart_id)
);

SELECT u.user_name, c.cart_id
from oe.users u join oe.carts
c on u.user_id = c.user_id

ALTER TABLE orders 
	ADD COLUMN user_id INTEGER,
	ADD CONSTRAINT user_id_fk FOREIGN KEY (user_id) 
	REFERENCES oe.users(user_id),
	ADD COLUMN bank_code VARCHAR(4),
	ADD CONSTRAINT bank_code_fk FOREIGN KEY (bank_code) 
	REFERENCES oe.bank(bank_code),
	ADD COLUMN total_discount DECIMAL(5,2),
	ADD COLUMN total_amount DECIMAL(8,2),
	ADD COLUMN payment_type VARCHAR(15),
	ADD COLUMN card_no VARCHAR(25),
	ADD COLUMN transac_no VARCHAR(25),
	ADD COLUMN transac_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	ADD COLUMN ref_no VARCHAR(25);

select * from orders

ALTER TABLE cart_items
ADD CONSTRAINT cart_product_id_fk
FOREIGN KEY (product_id)
REFERENCES products(product_id)

ALTER TABLE orders
ADD COLUMN location_id INT,
ADD CONSTRAINT location_id_hr
FOREIGN KEY (location_id)
REFERENCES hr.locations(location_id)

UPDATE orders as cu
set location_id = (select location_id from oe.location_x loc
where loc.street_address=cu.ship_address and loc.postal_code=cu.ship_postal_code
and loc.city=cu.ship_city and loc.state_province=cu.ship_region and
loc.country_name=cu.ship_country
) where cu.location_id is null

insert into hr.employees (employee_id, first_name, last_name, email, hire_date, job_id, salary)
select employee_id, first_name, last_name, LOWER(first_name||  '.' || last_name || '@sqltutorial.com')
as email, hire_date, j.job_id,
0.00 as salary
from oe.employees
JOIN (
    SELECT job_id
    FROM hr.jobs
    ORDER BY RANDOM()
	limit 1
) j ON TRUE;

alter table oe.orders
add constraint employee_id foreign key(employee_id) 
references hr.employees(employee_id)

CREATE EXTENSION IF NOT EXISTS pgcrypto;

alter table oe.users
alter column user_id add generated by default as identity

insert into oe.users (user_name,user_password,user_handphone)
select contact_name as user_name, 
crypt(lower(oc.customer_id), gen_salt('bf', 12)),
phone as user_handphone from oe.customers oc

select * from oe.users